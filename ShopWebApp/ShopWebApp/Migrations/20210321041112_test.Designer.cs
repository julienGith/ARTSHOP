// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopWebApp.Data;

namespace ShopWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210321041112_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "French_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopWebApp.Entities.Boutique", b =>
                {
                    b.Property<int>("Btqid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BTQID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BDescriptionC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("B_DESCRIPTION_C");

                    b.Property<string>("BDescriptionL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("B_DESCRIPTION_L");

                    b.Property<string>("Bic")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("BIC");

                    b.Property<string>("Btqmessage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BTQMESSAGE");

                    b.Property<string>("Btqseo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BTQSEO");

                    b.Property<string>("Btqtel")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("BTQTEL");

                    b.Property<string>("Btqtmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BTQTMAIL");

                    b.Property<int?>("Ca")
                        .HasColumnType("int")
                        .HasColumnName("CA");

                    b.Property<string>("Clerib")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("CLERIB");

                    b.Property<string>("Codebanque")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("CODEBANQUE");

                    b.Property<string>("Codeguichet")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("CODEGUICHET");

                    b.Property<string>("Codenaf")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("CODENAF");

                    b.Property<string>("Domiciliation")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("DOMICILIATION");

                    b.Property<string>("Iban")
                        .HasMaxLength(27)
                        .HasColumnType("nvarchar(27)")
                        .HasColumnName("IBAN");

                    b.Property<int?>("Nbsalarie")
                        .HasColumnType("int")
                        .HasColumnName("NBSALARIE");

                    b.Property<string>("Numcompte")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("NUMCOMPTE");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID");

                    b.Property<int>("Politiqueid")
                        .HasColumnType("int")
                        .HasColumnName("POLITIQUEID");

                    b.Property<string>("Raisonsociale")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("RAISONSOCIALE");

                    b.Property<string>("Siren")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("SIREN");

                    b.Property<string>("Siret")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("SIRET");

                    b.Property<string>("Siteweb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SITEWEB");

                    b.Property<string>("Statutjuridique")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("STATUTJURIDIQUE");

                    b.Property<string>("Titulaire")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("TITULAIRE");

                    b.HasKey("Btqid");

                    b.HasIndex(new[] { "Politiqueid" }, "APPLIQUER_FK");

                    b.HasIndex(new[] { "Partenaireid" }, "CREER_FK");

                    b.ToTable("BOUTIQUE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Boutiquecommande", b =>
                {
                    b.Property<int>("Btqcmdid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BTQCMDID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Btqcmddatecrea")
                        .HasColumnType("datetime")
                        .HasColumnName("BTQCMDDATECREA");

                    b.Property<DateTime?>("Btqcmddatedebut")
                        .HasColumnType("datetime")
                        .HasColumnName("BTQCMDDATEDEBUT");

                    b.Property<DateTime?>("Btqcmddatefin")
                        .HasColumnType("datetime")
                        .HasColumnName("BTQCMDDATEFIN");

                    b.Property<int>("Btqid")
                        .HasColumnType("int")
                        .HasColumnName("BTQID");

                    b.Property<int?>("Cltcmdid")
                        .HasColumnType("int")
                        .HasColumnName("CLTCMDID");

                    b.Property<int>("Cmdetatid")
                        .HasColumnType("int")
                        .HasColumnName("CMDETATID");

                    b.Property<int?>("Litigeid")
                        .HasColumnType("int")
                        .HasColumnName("LITIGEID");

                    b.HasKey("Btqcmdid");

                    b.HasIndex(new[] { "Cltcmdid" }, "ASSOCIER_FK");

                    b.HasIndex(new[] { "Cmdetatid" }, "COMPRENDRE_FK");

                    b.HasIndex(new[] { "Litigeid" }, "ENGENDRER2_FK");

                    b.HasIndex(new[] { "Btqid" }, "RECEVOIR_FK");

                    b.ToTable("BOUTIQUECOMMANDE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Btqcmddetail", b =>
                {
                    b.Property<int>("Btqcmdid")
                        .HasColumnType("int")
                        .HasColumnName("BTQCMDID");

                    b.Property<int>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("PRODID");

                    b.Property<int>("Livraisonid")
                        .HasColumnType("int")
                        .HasColumnName("LIVRAISONID");

                    b.Property<short?>("BCmdQteprod")
                        .HasColumnType("smallint")
                        .HasColumnName("B_CMD_QTEPROD");

                    b.HasKey("Btqcmdid", "Prodid", "Livraisonid");

                    b.HasIndex(new[] { "Prodid" }, "COMPORTER2_FK");

                    b.HasIndex(new[] { "Livraisonid" }, "COMPORTER3_FK");

                    b.HasIndex(new[] { "Btqcmdid" }, "COMPORTER_FK");

                    b.ToTable("BTQCMDDETAIL");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Btqposte", b =>
                {
                    b.Property<int>("Btqid")
                        .HasColumnType("int")
                        .HasColumnName("BTQID");

                    b.Property<int>("Localisationid")
                        .HasColumnType("int")
                        .HasColumnName("LOCALISATIONID");

                    b.HasKey("Btqid", "Localisationid");

                    b.HasIndex(new[] { "Localisationid" }, "PROPOSER2_FK");

                    b.HasIndex(new[] { "Btqid" }, "PROPOSER_FK");

                    b.ToTable("BTQPOSTE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Categorie", b =>
                {
                    b.Property<int>("Categorieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CATEGORIEID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categorienom")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CATEGORIENOM");

                    b.HasKey("Categorieid");

                    b.ToTable("CATEGORIE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Catnav", b =>
                {
                    b.Property<int>("Categorieid")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORIEID");

                    b.Property<int>("CatParentid")
                        .HasColumnType("int")
                        .HasColumnName("CAT_PARENTID");

                    b.HasKey("Categorieid", "CatParentid");

                    b.HasIndex(new[] { "Categorieid" }, "REGROUPER2_FK");

                    b.HasIndex(new[] { "CatParentid" }, "REGROUPER3_FK");

                    b.ToTable("CATNAV");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Civilite", b =>
                {
                    b.Property<int>("Civid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CIVID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abrege")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("ABREGE");

                    b.Property<string>("Complet")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("COMPLET");

                    b.HasKey("Civid");

                    b.ToTable("CIVILITE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Clientcommande", b =>
                {
                    b.Property<int>("Cltcmdid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CLTCMDID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Cltcmddate")
                        .HasColumnType("datetime")
                        .HasColumnName("CLTCMDDATE");

                    b.Property<DateTime?>("Cltcmddatedebut")
                        .HasColumnType("datetime")
                        .HasColumnName("CLTCMDDATEDEBUT");

                    b.Property<DateTime?>("Cltcmddatefin")
                        .HasColumnType("datetime")
                        .HasColumnName("CLTCMDDATEFIN");

                    b.Property<int>("Cmdetatid")
                        .HasColumnType("int")
                        .HasColumnName("CMDETATID");

                    b.Property<int?>("Factureid")
                        .HasColumnType("int")
                        .HasColumnName("FACTUREID");

                    b.Property<int?>("Paiementid")
                        .HasColumnType("int")
                        .HasColumnName("PAIEMENTID");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID");

                    b.HasKey("Cltcmdid");

                    b.HasIndex(new[] { "Cmdetatid" }, "DETENIR_FK");

                    b.HasIndex(new[] { "Factureid" }, "GENERER2_FK");

                    b.HasIndex(new[] { "Partenaireid" }, "PASSER_FK");

                    b.HasIndex(new[] { "Paiementid" }, "PRENDRE2_FK");

                    b.ToTable("CLIENTCOMMANDE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Cltcmddetail", b =>
                {
                    b.Property<int>("Cltcmdid")
                        .HasColumnType("int")
                        .HasColumnName("CLTCMDID");

                    b.Property<int>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("PRODID");

                    b.Property<int>("Livraisonid")
                        .HasColumnType("int")
                        .HasColumnName("LIVRAISONID");

                    b.Property<short?>("CCmdQteprod")
                        .HasColumnType("smallint")
                        .HasColumnName("C_CMD_QTEPROD");

                    b.HasKey("Cltcmdid", "Prodid", "Livraisonid");

                    b.HasIndex(new[] { "Prodid" }, "LISTER2_FK");

                    b.HasIndex(new[] { "Livraisonid" }, "LISTER3_FK");

                    b.HasIndex(new[] { "Cltcmdid" }, "LISTER_FK");

                    b.ToTable("CLTCMDDETAIL");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Cmdetat", b =>
                {
                    b.Property<int>("Cmdetatid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CMDETATID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cmdetat1")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CMDETAT");

                    b.HasKey("Cmdetatid");

                    b.ToTable("CMDETAT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Echange", b =>
                {
                    b.Property<int>("Partenaireid")
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID");

                    b.Property<int>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("PRODID");

                    b.Property<int>("Btqid")
                        .HasColumnType("int")
                        .HasColumnName("BTQID");

                    b.Property<string>("EQuest")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("E_QUEST");

                    b.Property<DateTime?>("EQuestdate")
                        .HasColumnType("datetime")
                        .HasColumnName("E_QUESTDATE");

                    b.Property<string>("ERep")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("E_REP");

                    b.Property<DateTime?>("ERepdate")
                        .HasColumnType("datetime")
                        .HasColumnName("E_REPDATE");

                    b.HasKey("Partenaireid", "Prodid", "Btqid");

                    b.HasIndex(new[] { "Prodid" }, "ECHANGE2_FK");

                    b.HasIndex(new[] { "Btqid" }, "ECHANGE3_FK");

                    b.HasIndex(new[] { "Partenaireid" }, "ECHANGE_FK");

                    b.ToTable("ECHANGE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Facture", b =>
                {
                    b.Property<int>("Factureid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FACTUREID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cltcmdid")
                        .HasColumnType("int")
                        .HasColumnName("CLTCMDID");

                    b.Property<string>("Factlien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FACTLIEN");

                    b.HasKey("Factureid");

                    b.HasIndex(new[] { "Cltcmdid" }, "GENERER_FK");

                    b.ToTable("FACTURE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Identification", b =>
                {
                    b.Property<int>("Identid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDENTID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Civid")
                        .HasColumnType("int")
                        .HasColumnName("CIVID");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nom")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("NOM");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID");

                    b.Property<string>("Prenom")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("PRENOM");

                    b.Property<string>("Tel")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("TEL");

                    b.HasKey("Identid");

                    b.HasIndex(new[] { "Civid" }, "ETRE_FK");

                    b.HasIndex(new[] { "Partenaireid" }, "IDENTIFIER_FK");

                    b.ToTable("IDENTIFICATION");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Litige", b =>
                {
                    b.Property<int>("Litigeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LITIGEID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Btqcmdid")
                        .HasColumnType("int")
                        .HasColumnName("BTQCMDID");

                    b.Property<string>("Ltgmsg")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LTGMSG");

                    b.Property<int?>("Remboursementid")
                        .HasColumnType("int")
                        .HasColumnName("REMBOURSEMENTID");

                    b.Property<int?>("Retourid")
                        .HasColumnType("int")
                        .HasColumnName("RETOURID");

                    b.HasKey("Litigeid");

                    b.HasIndex(new[] { "Remboursementid" }, "DONNER2_FK");

                    b.HasIndex(new[] { "Btqcmdid" }, "ENGENDRER_FK");

                    b.HasIndex(new[] { "Retourid" }, "ENVOYER2_FK");

                    b.ToTable("LITIGE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Livraison", b =>
                {
                    b.Property<int>("Livraisonid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LIVRAISONID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Dateenvoi")
                        .HasColumnType("datetime")
                        .HasColumnName("DATEENVOI");

                    b.Property<int>("Localisationid")
                        .HasColumnType("int")
                        .HasColumnName("LOCALISATIONID");

                    b.Property<int>("Lvretatid")
                        .HasColumnType("int")
                        .HasColumnName("LVRETATID");

                    b.Property<int>("Lvrtypid")
                        .HasColumnType("int")
                        .HasColumnName("LVRTYPID");

                    b.Property<string>("Suivilien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SUIVILIEN");

                    b.Property<string>("Suivinum")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SUIVINUM");

                    b.HasKey("Livraisonid");

                    b.HasIndex(new[] { "Lvretatid" }, "CARACTERISER_FK");

                    b.HasIndex(new[] { "Lvrtypid" }, "DEFINIR_FK");

                    b.HasIndex(new[] { "Localisationid" }, "DESTINER_FK");

                    b.ToTable("LIVRAISON");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Livraisonetat", b =>
                {
                    b.Property<int>("Lvretatid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LVRETATID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lvretat")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("LVRETAT");

                    b.HasKey("Lvretatid");

                    b.ToTable("LIVRAISONETAT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Livraisontype", b =>
                {
                    b.Property<int>("Lvrtypid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LVRTYPID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Lvrcout")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("LVRCOUT");

                    b.Property<short?>("Lvrdelai")
                        .HasColumnType("smallint")
                        .HasColumnName("LVRDELAI");

                    b.Property<string>("Lvrdesignation")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("LVRDESIGNATION");

                    b.HasKey("Lvrtypid");

                    b.ToTable("LIVRAISONTYPE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Localisation", b =>
                {
                    b.Property<int>("Localisationid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LOCALISATIONID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ADRESSE");

                    b.Property<int>("Btqid")
                        .HasColumnType("int")
                        .HasColumnName("BTQID");

                    b.Property<string>("Codepostal")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CODEPOSTAL");

                    b.Property<string>("Num")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NUM");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID");

                    b.Property<string>("Pays")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PAYS");

                    b.Property<string>("PrNom")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PR_NOM");

                    b.Property<string>("Rue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("RUE");

                    b.Property<string>("Ville")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("VILLE");

                    b.HasKey("Localisationid");

                    b.HasIndex(new[] { "Partenaireid" }, "POSSEDER_FK");

                    b.HasIndex(new[] { "Btqid" }, "SITUER_FK");

                    b.ToTable("LOCALISATION");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Medium", b =>
                {
                    b.Property<int>("Mediaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MEDIAID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Btqid")
                        .HasColumnType("int")
                        .HasColumnName("BTQID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Html")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("HTML");

                    b.Property<bool?>("Image")
                        .HasColumnType("bit")
                        .HasColumnName("IMAGE");

                    b.Property<string>("Lien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LIEN");

                    b.Property<int?>("Litigeid")
                        .HasColumnType("int")
                        .HasColumnName("LITIGEID");

                    b.Property<int?>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("PRODID");

                    b.Property<bool?>("Video")
                        .HasColumnType("bit")
                        .HasColumnName("VIDEO");

                    b.HasKey("Mediaid");

                    b.HasIndex(new[] { "Btqid" }, "BOUTMEDIA_FK");

                    b.HasIndex(new[] { "Litigeid" }, "LTGMEDIA_FK");

                    b.HasIndex(new[] { "Prodid" }, "PRODMEDIA_FK");

                    b.ToTable("MEDIA");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Moyendepaiement", b =>
                {
                    b.Property<int>("Mdpid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MDPID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CbNum")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("CB_NUM");

                    b.Property<string>("CbTitulaire")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("CB_TITULAIRE");

                    b.Property<string>("CbType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CB_TYPE");

                    b.Property<string>("Cvc")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CVC");

                    b.Property<DateTime?>("Dateexp")
                        .HasColumnType("datetime")
                        .HasColumnName("DATEEXP");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID");

                    b.HasKey("Mdpid");

                    b.HasIndex(new[] { "Partenaireid" }, "UTILISER_FK");

                    b.ToTable("MOYENDEPAIEMENT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Opinion", b =>
                {
                    b.Property<int>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("PRODID");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID");

                    b.Property<int>("Btqid")
                        .HasColumnType("int")
                        .HasColumnName("BTQID");

                    b.Property<DateTime?>("ADate")
                        .HasColumnType("datetime")
                        .HasColumnName("A_DATE");

                    b.Property<short?>("ANote")
                        .HasColumnType("smallint")
                        .HasColumnName("A_NOTE");

                    b.Property<DateTime?>("ARepdate")
                        .HasColumnType("datetime")
                        .HasColumnName("A_REPDATE");

                    b.Property<string>("AReponse")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("A_REPONSE");

                    b.Property<string>("ATexte")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("A_TEXTE");

                    b.HasKey("Prodid", "Partenaireid", "Btqid");

                    b.HasIndex(new[] { "Partenaireid" }, "AVIS2_FK");

                    b.HasIndex(new[] { "Btqid" }, "AVIS3_FK");

                    b.HasIndex(new[] { "Prodid" }, "AVIS_FK");

                    b.ToTable("OPINION");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Paiement", b =>
                {
                    b.Property<int>("Paiementid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PAIEMENTID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cltcmdid")
                        .HasColumnType("int")
                        .HasColumnName("CLTCMDID");

                    b.Property<int>("Mdpid")
                        .HasColumnType("int")
                        .HasColumnName("MDPID");

                    b.Property<decimal?>("PMontant")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("P_MONTANT");

                    b.HasKey("Paiementid");

                    b.HasIndex(new[] { "Cltcmdid" }, "PRENDRE_FK");

                    b.HasIndex(new[] { "Mdpid" }, "REGLER_FK");

                    b.ToTable("PAIEMENT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Panier", b =>
                {
                    b.Property<int>("Panierid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PANIERID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Partenaireid")
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID");

                    b.HasKey("Panierid");

                    b.HasIndex(new[] { "Partenaireid" }, "DISPOSER_FK");

                    b.ToTable("PANIER");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Panierdetail", b =>
                {
                    b.Property<int>("Panierid")
                        .HasColumnType("int")
                        .HasColumnName("PANIERID");

                    b.Property<int>("Prodid")
                        .HasColumnType("int")
                        .HasColumnName("PRODID");

                    b.Property<short?>("PQteprod")
                        .HasColumnType("smallint")
                        .HasColumnName("P_QTEPROD");

                    b.HasKey("Panierid", "Prodid");

                    b.HasIndex(new[] { "Prodid" }, "CONTENIR2_FK");

                    b.HasIndex(new[] { "Panierid" }, "CONTENIR_FK");

                    b.ToTable("PANIERDETAIL");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Partenaire", b =>
                {
                    b.Property<int>("Partenaireid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PARTENAIREID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Panierid")
                        .HasColumnType("int")
                        .HasColumnName("PANIERID");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Partenaireid");

                    b.HasIndex(new[] { "Panierid" }, "DISPOSER2_FK");

                    b.ToTable("PARTENAIRE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Politique", b =>
                {
                    b.Property<int>("Politiqueid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("POLITIQUEID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Echange")
                        .HasColumnType("bit")
                        .HasColumnName("ECHANGE");

                    b.Property<string>("Pltqdescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PLTQDESCRIPTION");

                    b.Property<bool?>("Remboursement")
                        .HasColumnType("bit")
                        .HasColumnName("REMBOURSEMENT");

                    b.HasKey("Politiqueid");

                    b.ToTable("POLITIQUE");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Produit", b =>
                {
                    b.Property<int>("Prodid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRODID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Btqid")
                        .HasColumnType("int")
                        .HasColumnName("BTQID");

                    b.Property<int>("Categorieid")
                        .HasColumnType("int")
                        .HasColumnName("CATEGORIEID");

                    b.Property<short?>("Disponibilite")
                        .HasColumnType("smallint")
                        .HasColumnName("DISPONIBILITE");

                    b.Property<int>("Lvrtypid")
                        .HasColumnType("int")
                        .HasColumnName("LVRTYPID");

                    b.Property<string>("PDescriptionC")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("P_DESCRIPTION_C");

                    b.Property<string>("PDescriptionL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("P_DESCRIPTION_L");

                    b.Property<string>("PMetaKeywords")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("P_META_KEYWORDS");

                    b.Property<string>("PMetaTitre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("P_META_TITRE");

                    b.Property<string>("PNom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("P_NOM");

                    b.Property<string>("PSeo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("P_SEO");

                    b.Property<short?>("Preparation")
                        .HasColumnType("smallint")
                        .HasColumnName("PREPARATION");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("PRIX");

                    b.Property<bool?>("Publier")
                        .HasColumnType("bit")
                        .HasColumnName("PUBLIER");

                    b.Property<short?>("Rabais")
                        .HasColumnType("smallint")
                        .HasColumnName("RABAIS");

                    b.Property<short?>("Stock")
                        .HasColumnType("smallint")
                        .HasColumnName("STOCK");

                    b.HasKey("Prodid");

                    b.HasIndex(new[] { "Categorieid" }, "APPARTENIR_FK");

                    b.HasIndex(new[] { "Lvrtypid" }, "AVOIR_FK");

                    b.HasIndex(new[] { "Btqid" }, "VENDRE_FK");

                    b.ToTable("PRODUIT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Ptransact", b =>
                {
                    b.Property<int>("Paiementid")
                        .HasColumnType("int")
                        .HasColumnName("PAIEMENTID");

                    b.Property<int>("Transactionid")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTIONID");

                    b.HasKey("Paiementid", "Transactionid");

                    b.HasIndex(new[] { "Transactionid" }, "TRACER2_FK");

                    b.HasIndex(new[] { "Paiementid" }, "TRACER_FK");

                    b.ToTable("PTRANSACT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Remboursement", b =>
                {
                    b.Property<int>("Remboursementid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("REMBOURSEMENTID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Litigeid")
                        .HasColumnType("int")
                        .HasColumnName("LITIGEID");

                    b.Property<decimal?>("RMontant")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("R_MONTANT");

                    b.HasKey("Remboursementid");

                    b.HasIndex(new[] { "Litigeid" }, "DONNER_FK");

                    b.ToTable("REMBOURSEMENT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Remplacement", b =>
                {
                    b.Property<int>("Rempid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("REMPID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Litigeid")
                        .HasColumnType("int")
                        .HasColumnName("LITIGEID");

                    b.Property<string>("RSuivilien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("R_SUIVILIEN");

                    b.Property<string>("RSuivinum")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("R_SUIVINUM");

                    b.HasKey("Rempid");

                    b.HasIndex(new[] { "Litigeid" }, "ENVOYER_FK");

                    b.ToTable("REMPLACEMENT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ShopWebApp.Entities.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Rtransact", b =>
                {
                    b.Property<int>("Remboursementid")
                        .HasColumnType("int")
                        .HasColumnName("REMBOURSEMENTID");

                    b.Property<int>("Transactionid")
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTIONID");

                    b.HasKey("Remboursementid", "Transactionid");

                    b.HasIndex(new[] { "Transactionid" }, "TRAQUER2_FK");

                    b.HasIndex(new[] { "Remboursementid" }, "TRAQUER_FK");

                    b.ToTable("RTRANSACT");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Transaction", b =>
                {
                    b.Property<int>("Transactionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TRANSACTIONID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CODE");

                    b.Property<short?>("Mode")
                        .HasColumnType("smallint")
                        .HasColumnName("MODE");

                    b.Property<string>("Transactcontenu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("TRANSACTCONTENU");

                    b.Property<DateTime?>("Transactcrea")
                        .HasColumnType("datetime")
                        .HasColumnName("TRANSACTCREA");

                    b.Property<DateTime?>("Transactmodif")
                        .HasColumnType("datetime")
                        .HasColumnName("TRANSACTMODIF");

                    b.Property<short?>("Transactstatut")
                        .HasColumnType("smallint")
                        .HasColumnName("TRANSACTSTATUT");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint")
                        .HasColumnName("TYPE");

                    b.HasKey("Transactionid");

                    b.ToTable("TRANSACTION");
                });

            modelBuilder.Entity("ShopWebApp.Entities.UserClaim", b =>
                {
                    b.Property<int>("UserClaimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserClaimID");

                    b.HasIndex("Partenaireid");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("ShopWebApp.Entities.UserLogin", b =>
                {
                    b.Property<int>("UserLoginID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserLoginID");

                    b.HasIndex("Partenaireid");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("ShopWebApp.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleID");

                    b.HasIndex("Partenaireid");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ShopWebApp.Entities.UserToken", b =>
                {
                    b.Property<int>("UserTokenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Partenaireid")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserTokenID");

                    b.HasIndex("Partenaireid");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Boutique", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Boutiques")
                        .HasForeignKey("Partenaireid")
                        .HasConstraintName("FK_BOUTIQUE_CREER_PARTENAI")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Politique", "Politique")
                        .WithMany("Boutiques")
                        .HasForeignKey("Politiqueid")
                        .HasConstraintName("FK_BOUTIQUE_APPLIQUER_POLITIQU")
                        .IsRequired();

                    b.Navigation("Partenaire");

                    b.Navigation("Politique");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Boutiquecommande", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutique", "Btq")
                        .WithMany("Boutiquecommandes")
                        .HasForeignKey("Btqid")
                        .HasConstraintName("FK_BOUTIQUE_RECEVOIR_BOUTIQUE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Clientcommande", "Cltcmd")
                        .WithMany("Boutiquecommandes")
                        .HasForeignKey("Cltcmdid")
                        .HasConstraintName("FK_BOUTIQUE_ASSOCIER_CLIENTCO");

                    b.HasOne("ShopWebApp.Entities.Cmdetat", "Cmdetat")
                        .WithMany("Boutiquecommandes")
                        .HasForeignKey("Cmdetatid")
                        .HasConstraintName("FK_BOUTIQUE_COMPRENDR_CMDETAT")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Litige", "Litige")
                        .WithMany("Boutiquecommandes")
                        .HasForeignKey("Litigeid")
                        .HasConstraintName("FK_BOUTIQUE_ENGENDRER_LITIGE");

                    b.Navigation("Btq");

                    b.Navigation("Cltcmd");

                    b.Navigation("Cmdetat");

                    b.Navigation("Litige");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Btqcmddetail", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutiquecommande", "Btqcmd")
                        .WithMany("Btqcmddetails")
                        .HasForeignKey("Btqcmdid")
                        .HasConstraintName("FK_BTQCMDDE_COMPORTER_BOUTIQUE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Livraison", "Livraison")
                        .WithMany("Btqcmddetails")
                        .HasForeignKey("Livraisonid")
                        .HasConstraintName("FK_BTQCMDDE_COMPORTER_LIVRAISO")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Produit", "Prod")
                        .WithMany("Btqcmddetails")
                        .HasForeignKey("Prodid")
                        .HasConstraintName("FK_BTQCMDDE_COMPORTER_PRODUIT")
                        .IsRequired();

                    b.Navigation("Btqcmd");

                    b.Navigation("Livraison");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Btqposte", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutique", "Btq")
                        .WithMany("Btqpostes")
                        .HasForeignKey("Btqid")
                        .HasConstraintName("FK_BTQPOSTE_PROPOSER_BOUTIQUE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Localisation", "Localisation")
                        .WithMany("Btqpostes")
                        .HasForeignKey("Localisationid")
                        .HasConstraintName("FK_BTQPOSTE_PROPOSER2_LOCALISA")
                        .IsRequired();

                    b.Navigation("Btq");

                    b.Navigation("Localisation");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Catnav", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Categorie", "CatParent")
                        .WithMany("CatnavCatParents")
                        .HasForeignKey("CatParentid")
                        .HasConstraintName("FK_CATNAV_REGROUPER_CATEGORI2")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Categorie", "Categorie")
                        .WithMany("CatnavCategories")
                        .HasForeignKey("Categorieid")
                        .HasConstraintName("FK_CATNAV_REGROUPER_CATEGORI1")
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("CatParent");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Clientcommande", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Cmdetat", "Cmdetat")
                        .WithMany("Clientcommandes")
                        .HasForeignKey("Cmdetatid")
                        .HasConstraintName("FK_CLIENTCO_DETENIR_CMDETAT")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Facture", "Facture")
                        .WithMany("Clientcommandes")
                        .HasForeignKey("Factureid")
                        .HasConstraintName("FK_CLIENTCO_GENERER2_FACTURE");

                    b.HasOne("ShopWebApp.Entities.Paiement", "Paiement")
                        .WithMany("Clientcommandes")
                        .HasForeignKey("Paiementid")
                        .HasConstraintName("FK_CLIENTCO_PRENDRE2_PAIEMENT");

                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Clientcommandes")
                        .HasForeignKey("Partenaireid")
                        .HasConstraintName("FK_CLIENTCO_PASSER_PARTENAI")
                        .IsRequired();

                    b.Navigation("Cmdetat");

                    b.Navigation("Facture");

                    b.Navigation("Paiement");

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Cltcmddetail", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Clientcommande", "Cltcmd")
                        .WithMany("Cltcmddetails")
                        .HasForeignKey("Cltcmdid")
                        .HasConstraintName("FK_CLTCMDDE_LISTER_CLIENTCO")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Livraison", "Livraison")
                        .WithMany("Cltcmddetails")
                        .HasForeignKey("Livraisonid")
                        .HasConstraintName("FK_CLTCMDDE_LISTER3_LIVRAISO")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Produit", "Prod")
                        .WithMany("Cltcmddetails")
                        .HasForeignKey("Prodid")
                        .HasConstraintName("FK_CLTCMDDE_LISTER2_PRODUIT")
                        .IsRequired();

                    b.Navigation("Cltcmd");

                    b.Navigation("Livraison");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Echange", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutique", "Btq")
                        .WithMany("Echanges")
                        .HasForeignKey("Btqid")
                        .HasConstraintName("FK_ECHANGE_ECHANGE3_BOUTIQUE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Echanges")
                        .HasForeignKey("Partenaireid")
                        .HasConstraintName("FK_ECHANGE_ECHANGE_PARTENAI")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Produit", "Prod")
                        .WithMany("Echanges")
                        .HasForeignKey("Prodid")
                        .HasConstraintName("FK_ECHANGE_ECHANGE2_PRODUIT")
                        .IsRequired();

                    b.Navigation("Btq");

                    b.Navigation("Partenaire");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Facture", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Clientcommande", "Cltcmd")
                        .WithMany("Factures")
                        .HasForeignKey("Cltcmdid")
                        .HasConstraintName("FK_FACTURE_GENERER_CLIENTCO")
                        .IsRequired();

                    b.Navigation("Cltcmd");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Identification", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Civilite", "Civ")
                        .WithMany("Identifications")
                        .HasForeignKey("Civid")
                        .HasConstraintName("FK_IDENTIFI_ETRE_CIVILITE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Identifications")
                        .HasForeignKey("Partenaireid")
                        .HasConstraintName("FK_IDENTIFI_IDENTIFIE_PARTENAI")
                        .IsRequired();

                    b.Navigation("Civ");

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Litige", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutiquecommande", "Btqcmd")
                        .WithMany("Litiges")
                        .HasForeignKey("Btqcmdid")
                        .HasConstraintName("FK_LITIGE_ENGENDRER_BOUTIQUE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Remboursement", "Remboursement")
                        .WithMany("Litiges")
                        .HasForeignKey("Remboursementid")
                        .HasConstraintName("FK_LITIGE_DONNER2_REMBOURS");

                    b.HasOne("ShopWebApp.Entities.Remplacement", "Retour")
                        .WithMany("Litiges")
                        .HasForeignKey("Retourid")
                        .HasConstraintName("FK_LITIGE_ENVOYER2_REMPLACE");

                    b.Navigation("Btqcmd");

                    b.Navigation("Remboursement");

                    b.Navigation("Retour");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Livraison", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Localisation", "Localisation")
                        .WithMany("Livraisons")
                        .HasForeignKey("Localisationid")
                        .HasConstraintName("FK_LIVRAISO_DESTINER_LOCALISA")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Livraisonetat", "Lvretat")
                        .WithMany("Livraisons")
                        .HasForeignKey("Lvretatid")
                        .HasConstraintName("FK_LIVRAISO_CARACTERI_LIVRAISO")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Livraisontype", "Lvrtyp")
                        .WithMany("Livraisons")
                        .HasForeignKey("Lvrtypid")
                        .HasConstraintName("FK_LIVRAISO_DEFINIR_LIVRAISO")
                        .IsRequired();

                    b.Navigation("Localisation");

                    b.Navigation("Lvretat");

                    b.Navigation("Lvrtyp");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Localisation", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutique", "Btq")
                        .WithMany("Localisations")
                        .HasForeignKey("Btqid")
                        .HasConstraintName("FK_LOCALISA_SITUER_BOUTIQUE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Localisations")
                        .HasForeignKey("Partenaireid")
                        .HasConstraintName("FK_LOCALISA_POSSEDER_PARTENAI")
                        .IsRequired();

                    b.Navigation("Btq");

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Medium", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutique", "Btq")
                        .WithMany("Media")
                        .HasForeignKey("Btqid")
                        .HasConstraintName("FK_MEDIA_BOUTMEDIA_BOUTIQUE");

                    b.HasOne("ShopWebApp.Entities.Litige", "Litige")
                        .WithMany("Media")
                        .HasForeignKey("Litigeid")
                        .HasConstraintName("FK_MEDIA_LTGMEDIA_LITIGE");

                    b.HasOne("ShopWebApp.Entities.Produit", "Prod")
                        .WithMany("Media")
                        .HasForeignKey("Prodid")
                        .HasConstraintName("FK_MEDIA_PRODMEDIA_PRODUIT");

                    b.Navigation("Btq");

                    b.Navigation("Litige");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Moyendepaiement", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Moyendepaiements")
                        .HasForeignKey("Partenaireid")
                        .HasConstraintName("FK_MOYENDEP_UTILISER_PARTENAI")
                        .IsRequired();

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Opinion", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutique", "Btq")
                        .WithMany("Opinions")
                        .HasForeignKey("Btqid")
                        .HasConstraintName("FK_OPINION_AVIS3_BOUTIQUE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Opinions")
                        .HasForeignKey("Partenaireid")
                        .HasConstraintName("FK_OPINION_AVIS2_PARTENAI")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Produit", "Prod")
                        .WithMany("Opinions")
                        .HasForeignKey("Prodid")
                        .HasConstraintName("FK_OPINION_AVIS_PRODUIT")
                        .IsRequired();

                    b.Navigation("Btq");

                    b.Navigation("Partenaire");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Paiement", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Clientcommande", "Cltcmd")
                        .WithMany("Paiements")
                        .HasForeignKey("Cltcmdid")
                        .HasConstraintName("FK_PAIEMENT_PRENDRE_CLIENTCO")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Moyendepaiement", "Mdp")
                        .WithMany("Paiements")
                        .HasForeignKey("Mdpid")
                        .HasConstraintName("FK_PAIEMENT_REGLER_MOYENDEP")
                        .IsRequired();

                    b.Navigation("Cltcmd");

                    b.Navigation("Mdp");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Panier", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Paniers")
                        .HasForeignKey("Partenaireid")
                        .HasConstraintName("FK_PANIER_DISPOSER_PARTENAI");

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Panierdetail", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Panier", "Panier")
                        .WithMany("Panierdetails")
                        .HasForeignKey("Panierid")
                        .HasConstraintName("FK_PANIERDE_CONTENIR_PANIER")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Produit", "Prod")
                        .WithMany("Panierdetails")
                        .HasForeignKey("Prodid")
                        .HasConstraintName("FK_PANIERDE_CONTENIR2_PRODUIT")
                        .IsRequired();

                    b.Navigation("Panier");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Partenaire", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Panier", "Panier")
                        .WithMany("Partenaires")
                        .HasForeignKey("Panierid")
                        .HasConstraintName("FK_PARTENAI_DISPOSER2_PANIER");

                    b.Navigation("Panier");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Produit", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Boutique", "Btq")
                        .WithMany("Produits")
                        .HasForeignKey("Btqid")
                        .HasConstraintName("FK_PRODUIT_VENDRE_BOUTIQUE")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Categorie", "Categorie")
                        .WithMany("Produits")
                        .HasForeignKey("Categorieid")
                        .HasConstraintName("FK_PRODUIT_APPARTENI_CATEGORI")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Livraisontype", "Lvrtyp")
                        .WithMany("Produits")
                        .HasForeignKey("Lvrtypid")
                        .HasConstraintName("FK_PRODUIT_AVOIR_LIVRAISO")
                        .IsRequired();

                    b.Navigation("Btq");

                    b.Navigation("Categorie");

                    b.Navigation("Lvrtyp");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Ptransact", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Paiement", "Paiement")
                        .WithMany("Ptransacts")
                        .HasForeignKey("Paiementid")
                        .HasConstraintName("FK_PTRANSAC_TRACER_PAIEMENT")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Transaction", "Transaction")
                        .WithMany("Ptransacts")
                        .HasForeignKey("Transactionid")
                        .HasConstraintName("FK_PTRANSAC_TRACER2_TRANSACT")
                        .IsRequired();

                    b.Navigation("Paiement");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Remboursement", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Litige", "Litige")
                        .WithMany("Remboursements")
                        .HasForeignKey("Litigeid")
                        .HasConstraintName("FK_REMBOURS_DONNER_LITIGE")
                        .IsRequired();

                    b.Navigation("Litige");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Remplacement", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Litige", "Litige")
                        .WithMany("Remplacements")
                        .HasForeignKey("Litigeid")
                        .HasConstraintName("FK_REMPLACE_ENVOYER_LITIGE")
                        .IsRequired();

                    b.Navigation("Litige");
                });

            modelBuilder.Entity("ShopWebApp.Entities.RoleClaim", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Rtransact", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Remboursement", "Remboursement")
                        .WithMany("Rtransacts")
                        .HasForeignKey("Remboursementid")
                        .HasConstraintName("FK_RTRANSAC_TRAQUER_REMBOURS")
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Transaction", "Transaction")
                        .WithMany("Rtransacts")
                        .HasForeignKey("Transactionid")
                        .HasConstraintName("FK_RTRANSAC_TRAQUER2_TRANSACT")
                        .IsRequired();

                    b.Navigation("Remboursement");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("ShopWebApp.Entities.UserClaim", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Claims")
                        .HasForeignKey("Partenaireid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("ShopWebApp.Entities.UserLogin", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Logins")
                        .HasForeignKey("Partenaireid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("ShopWebApp.Entities.UserRole", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("UserRoles")
                        .HasForeignKey("Partenaireid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopWebApp.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partenaire");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ShopWebApp.Entities.UserToken", b =>
                {
                    b.HasOne("ShopWebApp.Entities.Partenaire", "Partenaire")
                        .WithMany("Tokens")
                        .HasForeignKey("Partenaireid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Boutique", b =>
                {
                    b.Navigation("Boutiquecommandes");

                    b.Navigation("Btqpostes");

                    b.Navigation("Echanges");

                    b.Navigation("Localisations");

                    b.Navigation("Media");

                    b.Navigation("Opinions");

                    b.Navigation("Produits");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Boutiquecommande", b =>
                {
                    b.Navigation("Btqcmddetails");

                    b.Navigation("Litiges");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Categorie", b =>
                {
                    b.Navigation("CatnavCategories");

                    b.Navigation("CatnavCatParents");

                    b.Navigation("Produits");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Civilite", b =>
                {
                    b.Navigation("Identifications");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Clientcommande", b =>
                {
                    b.Navigation("Boutiquecommandes");

                    b.Navigation("Cltcmddetails");

                    b.Navigation("Factures");

                    b.Navigation("Paiements");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Cmdetat", b =>
                {
                    b.Navigation("Boutiquecommandes");

                    b.Navigation("Clientcommandes");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Facture", b =>
                {
                    b.Navigation("Clientcommandes");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Litige", b =>
                {
                    b.Navigation("Boutiquecommandes");

                    b.Navigation("Media");

                    b.Navigation("Remboursements");

                    b.Navigation("Remplacements");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Livraison", b =>
                {
                    b.Navigation("Btqcmddetails");

                    b.Navigation("Cltcmddetails");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Livraisonetat", b =>
                {
                    b.Navigation("Livraisons");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Livraisontype", b =>
                {
                    b.Navigation("Livraisons");

                    b.Navigation("Produits");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Localisation", b =>
                {
                    b.Navigation("Btqpostes");

                    b.Navigation("Livraisons");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Moyendepaiement", b =>
                {
                    b.Navigation("Paiements");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Paiement", b =>
                {
                    b.Navigation("Clientcommandes");

                    b.Navigation("Ptransacts");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Panier", b =>
                {
                    b.Navigation("Panierdetails");

                    b.Navigation("Partenaires");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Partenaire", b =>
                {
                    b.Navigation("Boutiques");

                    b.Navigation("Claims");

                    b.Navigation("Clientcommandes");

                    b.Navigation("Echanges");

                    b.Navigation("Identifications");

                    b.Navigation("Localisations");

                    b.Navigation("Logins");

                    b.Navigation("Moyendepaiements");

                    b.Navigation("Opinions");

                    b.Navigation("Paniers");

                    b.Navigation("Tokens");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Politique", b =>
                {
                    b.Navigation("Boutiques");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Produit", b =>
                {
                    b.Navigation("Btqcmddetails");

                    b.Navigation("Cltcmddetails");

                    b.Navigation("Echanges");

                    b.Navigation("Media");

                    b.Navigation("Opinions");

                    b.Navigation("Panierdetails");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Remboursement", b =>
                {
                    b.Navigation("Litiges");

                    b.Navigation("Rtransacts");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Remplacement", b =>
                {
                    b.Navigation("Litiges");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ShopWebApp.Entities.Transaction", b =>
                {
                    b.Navigation("Ptransacts");

                    b.Navigation("Rtransacts");
                });
#pragma warning restore 612, 618
        }
    }
}
