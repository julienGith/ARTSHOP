@page
@model E_Shop.Pages.Produits.DetailsProduitModel
@{
}
@*@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiforgery
@{
    var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}*@
<style>
    div.imageborder {
        border-radius: 999em;
        width: 125px;
        height: 125px;
        padding: 1px;
        line-height: 0;
        border: 5px solid #808080;
        background-color: #eee;
    }

    .imgMiniBout {
        display: block;
        background: transparent;
        padding: 8px;
        border: 1px solid #ccc;
        box-shadow: 10px 10px 10px #999;
        border-radius: 999em;
        height: 100%;
        width: 100%;
        margin: 0;
    }
</style>
<form method="post"></form>
<div class="row align-items-center">
    <div class="col-sm-4 align-self-start">
        <div class="card col mt-2">
            <div class="imageborder card-img-top">
                <img class="imgMiniBout card-img-top" src="@Model.imgVignette" />
            </div>
            <div class="card-body">
                <p class="card-text">@Model.localisation.Departement</p>
            </div>
        </div>
    </div>
    <div class="col-sm-8">
        <div class="card mt-2">
            <div class="row">
                <div class="col">
                    <img src="@Model.imgProd" class="float-left img-fluid" alt="@Model.produit.PNom">
                </div>
                <div class="col">
                    <h4>@Model.produit.PNom</h4>
                    <p class="p-2">Choisir une quantité</p>
                    <div class="d-flex flex-row">
                        @if (Model.Formats.Count > 0)
                        {
                            <select id="selectFormat" class="form-control" onchange="GetPrix()">
                                @foreach (var item in Model.Formats)
                                {
                                    if (item.Litre > 0)
                                    {
                                        <option type="submit" id="@item.Formatid" value="@item.Formatid">@String.Format("{0:#,0.##}", item.Litre) l</option>
                                    }
                                    if (item.Poids > 0)
                                    {
                                        <option type="submit" id="@item.Formatid" value="@item.Formatid">@String.Format("{0:#,0.##}", item.Poids) kg</option>
                                    }
                                }
                            </select>
                        }
                        <select id="quantity" class="form-control">
                            @for (int i = 1; i < Model.produit.Stock + 1; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>

                    <strike hidden id="prixNorm">@Model.Formats.FirstOrDefault().Prix € </strike>

                    @if (Model.produit.Rabais > 0)
                    {
                        var prixRabais = Math.Round((decimal)Model.Formats.FirstOrDefault().Prix, 2) - Math.Round(((decimal)Model.Formats.FirstOrDefault().Prix * ((decimal)Model.produit.Rabais / 100)), 2);
                        <div>
                            <strike id="prixNorm2">@Model.Formats.FirstOrDefault().Prix € </strike>
                            <span id="rabais">@Model.produit.Rabais %</span>
                            <span id="prixRabais">@Math.Round((decimal)prixRabais, 2) €</span>
                        </div>
                        var FprixKgRabais = prixRabais / Model.Formats.FirstOrDefault().Poids;
                        var FprixLRabais = prixRabais / Model.Formats.FirstOrDefault().Litre;
                        @if (FprixKgRabais > 0)
                        {
                            <span id="FprixKgRabais">@Math.Round((decimal)FprixKgRabais, 2) €/kg</span>
                        }
                        if (FprixLRabais > 0)
                        {
                            <span id="FprixLRabais">@Math.Round((decimal)FprixLRabais, 2) €/ litre</span>
                        }
                    }
                    else
                    {
                        <div>
                            <span id="prix">@Model.Formats.FirstOrDefault().Prix €</span>
                        </div>
                        var FprixKg = Model.Formats.FirstOrDefault().Prix / Model.Formats.FirstOrDefault().Poids;
                        var FprixL = Model.Formats.FirstOrDefault().Prix / Model.Formats.FirstOrDefault().Litre;
                        @if (FprixKg > 0)
                        {
                            <span id="FprixKg">@Math.Round((decimal)FprixKg, 2) €/kg</span>
                            <span hidden id="OprixKg">@Math.Round((decimal)FprixKg, 2) €/kg</span>
                        }
                        if (FprixL > 0)
                        {
                            <span id="FprixL">@Math.Round((decimal)FprixL, 2) €/litre</span>
                            <span hidden id="OprixL">@Math.Round((decimal)FprixL, 2) €/litre</span>
                        }

                    }
                    <div>
                        <span id="prixKg"></span><span id="prixL"></span>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <button data="@Model.produit.Prodid" onclick="AddToCart()" class="btn btn-primary btn-lg btn-block">Ajouter au panier</button>
                <nav>
                    <div class="nav nav-tabs" id="nav-tab" role="tablist">
                        <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Description</a>
                        <a class="nav-item nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Avis client</a>
                        <a class="nav-item nav-link" id="nav-contact-tab" data-toggle="tab" href="#nav-contact" role="tab" aria-controls="nav-contact" aria-selected="false">Livraison</a>
                    </div>
                </nav>
                <div class="tab-content" id="nav-tabContent">
                    <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
                        <p>@Model.produit.PDescriptionL</p>
                    </div>
                    <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
                        <p>Marcel : j'adore ce produit !</p>
                    </div>
                    <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">
                        <p>

                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{

    <script>
            function GetPrix() {
                var token = document.querySelector("[name=__RequestVerificationToken]").value;
                var selectedFormat = document.getElementById("selectFormat").value;
                //Poids/Litre selection
                var poids = document.getElementById(selectedFormat).innerHTML.replace(" Kg", "");
                var poidsFloat = parseFloat(poids.replace(",", "."));
                var litre = document.getElementById(selectedFormat).innerHTML.replace(" Litre", "");
                var litreFloat = parseFloat(litre.replace(",", "."));
                var xhttp = new XMLHttpRequest();
                xhttp.responseType = 'json';
                xhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        console.log(xhttp.response);
                        if (@Model.produit.Rabais > 0) {
                                var prixRabais = parseFloat(xhttp.response) - (parseFloat(xhttp.response) * (@Model.produit.Rabais) / 100) ;
                                var prixKgRabais = prixRabais / poidsFloat;
                                var prixLRabais = prixRabais / litreFloat;
                                document.getElementById("prixNorm2").innerHTML = xhttp.response + "€";
                                document.getElementById("prixRabais").innerHTML = prixRabais.toFixed(2) + "€";
                                var FprixKgRabais = document.getElementById('FprixKgRabais');
                                if (typeof (FprixKgRabais) != 'undefined' && FprixKgRabais != null) {
                                    document.getElementById("FprixKgRabais").innerHTML = prixKgRabais;
                                }
                                var FprixLRabais = document.getElementById('FprixLRabais');
                                if (typeof (FprixLRabais) != 'undefined' && FprixLRabais != null) {
                                    document.getElementById("FprixLRabais").innerHTML = prixLRabais + " €/litre";
                                }
                        } else {
                            document.getElementById("prix").innerHTML = xhttp.response + "€";
                            var prixKg = parseFloat(xhttp.response) / poidsFloat;
                            var prixL = parseFloat(xhttp.response) / litreFloat;

                            var element1 = document.getElementById('FprixKg');
                            if (typeof (element1) != 'undefined' && element1 != null) {
                                var originPrixKg = document.getElementById("OprixKg").innerHTML;
                                var originPrixKgFloat = parseFloat(originPrixKg.replace(",", "."));
                                document.getElementById("FprixKg").hidden = true;
                                document.getElementById("prixKg").innerHTML = prixKg + " €/kg";

                                var PoriginPrix = poidsFloat * originPrixKgFloat;

                                if (prixKg < originPrixKgFloat) {
                                    console.log(PoriginPrix);
                                    document.getElementById("prixNorm").innerHTML = PoriginPrix + " €";
                                    document.getElementById("prixNorm").hidden = false;
                                } else {
                                    document.getElementById("prixNorm").hidden = true;
                                }
                            }
                            var element2 = document.getElementById('FprixL');
                            if (typeof (element2) != 'undefined' && element2 != null) {
                                var originPrixL = document.getElementById("OprixL").innerHTML;
                                var originPrixLFloat = parseFloat(originPrixL.replace(",", "."));
                                document.getElementById("FprixL").hidden = true;
                                document.getElementById("prixL").innerHTML = prixL + " €/litre";

                                var LoriginPrix = litreFloat * originPrixLFloat;

                                if (prixL < originPrixLFloat) {
                                    document.getElementById("prixNorm").innerHTML = LoriginPrix + " €";
                                    document.getElementById("prixNorm").hidden = false;
                                } else {
                                    document.getElementById("prixNorm").hidden = true;
                                }
                            }

                        }


                    }
                    else {
                        console.log(xhttp.status);
                    }
                };
                xhttp.open("post", '/Produits/DetailsProduit?handler=Format&formatId=' + selectedFormat, true);
                xhttp.setRequestHeader("XSRF-TOKEN", token)
                xhttp.send();
            }
            function AddToCart() {
                console.log("token", document.querySelector("[name=__RequestVerificationToken]").value);
                var token = document.querySelector("[name=__RequestVerificationToken]").value;
                console.log(token);
                var selectFormat = document.getElementById("selectFormat").value;
                console.log("format", selectFormat);
                var selectQuantity = document.getElementById("quantity").value;
                console.log("qte", selectQuantity);
                var xhttp = new XMLHttpRequest();
                xhttp.responseType = 'json';
                xhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        document.getElementById("counter").setAttribute("value", parseInt(xhttp.response)) ;
                    }
                    else {
                        console.log(xhttp.status);
                    }
                };
                xhttp.open("post", '/Produits/DetailsProduit?handler=AddToCart&prodId=' +@Model.produit.Prodid+'&idformat=' + selectFormat + '&quantity=' + selectQuantity, true);
                xhttp.setRequestHeader("XSRF-TOKEN", token)
                xhttp.send();

            }

            document.addEventListener("DOMContentLoaded", function () {

            });
            document.addEventListener("DOMContentLoaded", function (event) {
            });
    </script>
}
